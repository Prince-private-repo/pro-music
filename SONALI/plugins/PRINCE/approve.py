from SONALI import app
from os import environ
from pyrogram import filters
from pyrogram.types import ChatJoinRequest, InlineKeyboardButton, InlineKeyboardMarkup, Message

# Define Inline Button (Only Add Me)
BUTTONS = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(" ‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ‚ûï", url="https://t.me/Sweety_music09_BOT?startgroup=true")
        ]
    ]
)

# Default approval state (in-memory)
APPROVAL_STATE = True  # Start with auto-approval ON

# Stylish Welcome Message
WELCOME_TEXT = (
    "üåü ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á, {mention}! üåü\n\n"
    "üé∂ ·¥õ·¥è ‚û• {title} üéµ\n\n"
    "üíñ  è·¥è·¥ú'·¥†·¥á  ô·¥á·¥á…¥ ·¥Ä·¥ú·¥õ·¥è-·¥Ä·¥ò·¥ò Ä·¥è·¥†·¥á·¥Ö! üéâ\n"
    "‚ú® ·¥á…¥·¥ä·¥è è ·¥ç·¥ús…™·¥Ñ & …¢ Ä·¥è·¥è·¥†·¥á  ü…™·¥ã·¥á …¥·¥á·¥†·¥á Ä  ô·¥á“ì·¥è Ä·¥á! ‚ú®\n"
)

# Auto-Approval Event Handler
@app.on_chat_join_request(filters.group | filters.channel)
async def autoapprove(client, message: ChatJoinRequest):
    global APPROVAL_STATE  # Use global variable for approval state

    chat = message.chat  # Target Chat
    user = message.from_user  # Joining User

    print(f"‚úÖ {user.first_name} ({user.id}) requested to join '{chat.title}' ({chat.id})")

    # Check if auto-approval is enabled
    if APPROVAL_STATE:
        # Approve Join Request
        await client.approve_chat_join_request(chat_id=chat.id, user_id=user.id)

        # Send Welcome Message
        await client.send_message(
            chat_id=chat.id,
            text=WELCOME_TEXT.format(mention=user.mention, title=chat.title),
            reply_markup=BUTTONS
        )

# Command to Enable Auto-Approval
@app.on_message(filters.command("approve on") & (filters.group | filters.channel))
async def enable_autoapprove(client, message: Message):
    global APPROVAL_STATE
    APPROVAL_STATE = True
    await message.reply_text("‚úÖ ·¥Ä·¥ú·¥õ·¥è-·¥Ä·¥ò·¥ò Ä·¥è·¥†·¥á ü ·¥á…¥·¥Ä ô ü·¥á·¥Ö!\nNew ·¥ä·¥è…™…¥  Ä·¥á«´·¥ú·¥ás·¥õs ·¥°…™ ü ü  ô·¥á ·¥Ä·¥ò·¥ò Ä·¥è·¥†·¥á·¥Ö ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ…™·¥Ñ·¥Ä ü ü è.")

# Command to Disable Auto-Approval
@app.on_message(filters.command("approve off") & (filters.group | filters.channel))
async def disable_autoapprove(client, message: Message):
    global APPROVAL_STATE
    APPROVAL_STATE = False
    await message.reply_text("‚ùå A·¥ú·¥õ·¥è-·¥Ä·¥ò·¥ò Ä·¥è·¥†·¥á ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö !\nA·¥Ö·¥ç…™…¥s ·¥ç·¥ús·¥õ ·¥ç·¥Ä…¥·¥ú·¥Ä ü ü è ·¥Ä·¥ò·¥ò Ä·¥è·¥†·¥á …¥·¥á·¥° ·¥ä·¥è…™…¥  Ä·¥á«´·¥ú·¥ás·¥õs.")
